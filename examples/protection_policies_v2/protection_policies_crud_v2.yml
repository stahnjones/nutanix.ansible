# Pre-requisites:
# 1. Ensure that you have more than 1 clusters attached to PC for VG promote.
# 2. Modify the firewall rules for the two clusters that are registered with PC using the following commands (for promoting VG):
# SSH into the first cluster (PE1) and run the following command:
# /usr/local/nutanix/cluster/bin/modify_firewall -f -r <PE2_IP>,<PE2_VIP> -p port1,port2,port3,port4,port5 -i eth0
# SSH into the second cluster (PE2) and run the following command:
# /usr/local/nutanix/cluster/bin/modify_firewall -f -r <PE1_IP>,<PE1_VIP> -p port1,port2,port3,port4,port5 -i eth0

# Summary:
# This playbook will do the following:
# 1. Create categories for protection policies.
# 2. Create protection policies with linear retention.
# 3. Create protection policies with auto retention.
# 4. Create protection policies with synchronous replication.
# 5. Update protection policies with linear retention.
# 6. Update protection policies with auto retention.
# 7. List all protection policies.
# 8. List all protection policies with filter.
# 9. List all protection policies with limit.
# 10. Fetch protection policy by external ID.
# 11. Delete all protection policies.
# 12. Delete created categories.

- name: Protection policies playbook
  hosts: localhost
  gather_facts: false
  module_defaults:
    group/nutanix.ncp.ntnx:
      nutanix_host: <pc_ip>
      nutanix_username: <user>
      nutanix_password: <pass>
      validate_certs: false
  tasks:
    - name: Generate random names and set variables
      ansible.builtin.set_fact:
        random_name: "{{query('community.general.random_string',numbers=false, special=false,length=12)[0]}}"
        label1: "{{query('community.general.random_string',numbers=false, special=false,length=12)[0]}}"
        label2: "{{query('community.general.random_string',numbers=false, special=false,length=12)[0]}}"
        suffix_name: "ansible-category"
        todelete_categories: []
        todelete: []
        cluster:
          uuid: "00062fe7-4b68-e710-0000-000000028f57"
        cluster_availability_zone:
          uuid: "00062ef8-a0a4-5120-0bce-6793cff236de"
        availability_zone_pc_ip: "10.96.76.110"
        availability_zone_pc_uuid: "b791a896-232e-474e-955b-39cd0a0d8d3c"
        domain_manager_ext_id: "236acacc-209c-440c-bf99-7d7c67a7a260"

    - name: Setting Variables
      ansible.builtin.set_fact:
        replication_location_1:
          label: "ansible-label-{{label1}}"
          domain_manager_ext_id: "{{domain_manager_ext_id}}"
          is_primary: true
          replication_sub_location:
            nutanix_cluster:
              cluster_ext_ids:
                - "{{ cluster.uuid }}"

        replication_location_2:
          label: "ansible-label-{{label2}}"
          domain_manager_ext_id: "{{availability_zone_pc_uuid}}"
          is_primary: false
          replication_sub_location:
            nutanix_cluster:
              cluster_ext_ids:
                - "{{ cluster_availability_zone.uuid }}"

        replication_location_1_updated:
          label: "ansible-label-{{label1}}_updated"
          domain_manager_ext_id: "{{domain_manager_ext_id}}"
          is_primary: true
          replication_sub_location:
            nutanix_cluster:
              cluster_ext_ids:
                - "{{ cluster.uuid }}"

        replication_location_2_updated:
          label: "ansible-label-{{label2}}_updated"
          domain_manager_ext_id: "{{availability_zone_pc_uuid}}"
          is_primary: false
          replication_sub_location:
            nutanix_cluster:
              cluster_ext_ids:
                - "{{ cluster_availability_zone.uuid }}"

        replication_configuration_linear_1:
          source_location_label: "ansible-label-{{label1}}"
          remote_location_label: "ansible-label-{{label2}}"
          schedule:
            recovery_point_type: "CRASH_CONSISTENT"
            recovery_point_objective_time_seconds: 3600
            retention:
              local: 1
              remote: 1
            start_time:
            sync_replication_auto_suspend_timeout_seconds: 300

        replication_configuration_linear_1_check_mode:
          source_location_label: "ansible-label-{{label1}}"
          remote_location_label: "ansible-label-{{label2}}"
          schedule:
            recovery_point_type: "CRASH_CONSISTENT"
            recovery_point_objective_time_seconds: 3600
            retention:
              local: 1
              remote: 1
            start_time: "13h:11m"
            sync_replication_auto_suspend_timeout_seconds: 300

        replication_configuration_linear_2:
          source_location_label: "ansible-label-{{label2}}"
          remote_location_label: "ansible-label-{{label1}}"
          schedule:
            recovery_point_type: "CRASH_CONSISTENT"
            recovery_point_objective_time_seconds: 3600
            retention:
              local: 1
              remote: 1
            start_time:
            sync_replication_auto_suspend_timeout_seconds: 300

        replication_configuration_linear_2_check_mode:
          source_location_label: "ansible-label-{{label2}}"
          remote_location_label: "ansible-label-{{label1}}"
          schedule:
            recovery_point_type: "CRASH_CONSISTENT"
            recovery_point_objective_time_seconds: 3600
            retention:
              local: 1
              remote: 1
            start_time: "13h:11m"
            sync_replication_auto_suspend_timeout_seconds: 300

        replication_configuration_linear_1_updated:
          source_location_label: "ansible-label-{{label1}}_updated"
          remote_location_label: "ansible-label-{{label2}}_updated"
          schedule:
            recovery_point_type: "CRASH_CONSISTENT"
            recovery_point_objective_time_seconds: 7200
            retention:
              local: 2
              remote: 2
            start_time:
            sync_replication_auto_suspend_timeout_seconds: 90

        replication_configuration_linear_1_updated_check_mode:
          source_location_label: "ansible-label-{{label1}}_updated"
          remote_location_label: "ansible-label-{{label2}}_updated"
          schedule:
            recovery_point_type: "CRASH_CONSISTENT"
            recovery_point_objective_time_seconds: 7200
            retention:
              local: 2
              remote: 2
            start_time: "14h:26m"
            sync_replication_auto_suspend_timeout_seconds: 90

        replication_configuration_linear_2_updated:
          source_location_label: "ansible-label-{{label2}}_updated"
          remote_location_label: "ansible-label-{{label1}}_updated"
          schedule:
            recovery_point_type: "CRASH_CONSISTENT"
            recovery_point_objective_time_seconds: 7200
            retention:
              local: 2
              remote: 2
            start_time:
            sync_replication_auto_suspend_timeout_seconds: 90

        replication_configuration_linear_2_updated_check_mode:
          source_location_label: "ansible-label-{{label2}}_updated"
          remote_location_label: "ansible-label-{{label1}}_updated"
          schedule:
            recovery_point_type: "CRASH_CONSISTENT"
            recovery_point_objective_time_seconds: 7200
            retention:
              local: 2
              remote: 2
            start_time: "14h:26m"
            sync_replication_auto_suspend_timeout_seconds: 90

        replication_configuration_auto_1:
          source_location_label: "ansible-label-{{label1}}"
          remote_location_label: "ansible-label-{{label2}}"
          schedule:
            recovery_point_type: "CRASH_CONSISTENT"
            recovery_point_objective_time_seconds: 60
            retention:
              local:
                snapshot_interval_type: "DAILY"
                frequency: 1
              remote:
                snapshot_interval_type: "DAILY"
                frequency: 1
            start_time:
            sync_replication_auto_suspend_timeout_seconds: 300

        replication_configuration_auto_2:
          source_location_label: "ansible-label-{{label2}}"
          remote_location_label: "ansible-label-{{label1}}"
          schedule:
            recovery_point_type: "CRASH_CONSISTENT"
            recovery_point_objective_time_seconds: 60
            retention:
              local:
                snapshot_interval_type: "DAILY"
                frequency: 1
              remote:
                snapshot_interval_type: "DAILY"
                frequency: 1
            start_time:
            sync_replication_auto_suspend_timeout_seconds: 300

        replication_configuration_auto_1_updated:
          source_location_label: "ansible-label-{{label1}}_updated"
          remote_location_label: "ansible-label-{{label2}}_updated"
          schedule:
            recovery_point_type: "CRASH_CONSISTENT"
            recovery_point_objective_time_seconds: 3600
            retention:
              local:
                snapshot_interval_type: "DAILY"
                frequency: 2
              remote:
                snapshot_interval_type: "DAILY"
                frequency: 2
            start_time:
            sync_replication_auto_suspend_timeout_seconds: 90

        replication_configuration_auto_2_updated:
          source_location_label: "ansible-label-{{label2}}_updated"
          remote_location_label: "ansible-label-{{label1}}_updated"
          schedule:
            recovery_point_type: "CRASH_CONSISTENT"
            recovery_point_objective_time_seconds: 3600
            retention:
              local:
                snapshot_interval_type: "DAILY"
                frequency: 2
              remote:
                snapshot_interval_type: "DAILY"
                frequency: 2
            start_time:
            sync_replication_auto_suspend_timeout_seconds: 90

        replication_configuration_sync_1:
          source_location_label: "ansible-label-{{label1}}"
          remote_location_label: "ansible-label-{{label2}}"
          schedule:
            recovery_point_type: "CRASH_CONSISTENT"
            retention: null
            recovery_point_objective_time_seconds: 0
            start_time:
            sync_replication_auto_suspend_timeout_seconds: 10

        replication_configuration_sync_2:
          source_location_label: "ansible-label-{{label2}}"
          remote_location_label: "ansible-label-{{label1}}"
          schedule:
            recovery_point_type: "CRASH_CONSISTENT"
            retention: null
            recovery_point_objective_time_seconds: 0
            start_time:
            sync_replication_auto_suspend_timeout_seconds: 10

    - name: Set ansible keys and values
      ansible.builtin.set_fact:
        keys:
          - "{{random_name}}{{suffix_name}}key1"
          - "{{random_name}}{{suffix_name}}key2"
          - "{{random_name}}{{suffix_name}}key3"
        values:
          - "{{random_name}}{{suffix_name}}value1"
          - "{{random_name}}{{suffix_name}}value2"
          - "{{random_name}}{{suffix_name}}value3"

    ########################################################################################

    - name: Create categories for protection policies
      nutanix.ncp.ntnx_categories_v2:
        key: "{{ keys[item] }}"
        value: "{{ values[item] }}"
        description: "ansible-category"
      register: output
      ignore_errors: true
      loop: "{{ range(0, 3) }}"
      loop_control:
        label: "{{ item }}"

    - name: Save external IDs to the list
      ansible.builtin.set_fact:
        todelete_categories: "{{ todelete_categories + [ item.response.ext_id ] }}"
      with_items: "{{ output.results }}"

    - name: Set categories external ids
      ansible.builtin.set_fact:
        category_ext_id_1: "{{ todelete_categories[0] }}"
        category_ext_id_2: "{{ todelete_categories[1] }}"
        category_ext_id_3: "{{ todelete_categories[2] }}"

    ########################################################################################

    - name: Generate spec for creating protection policy using check mode
      nutanix.ncp.ntnx_protection_policies_v2:
        name: "ansible-create-protection-policy-name"
        description: "ansible-create-protection-policy-description"
        replication_locations:
          - "{{ replication_location_1}}"
          - "{{ replication_location_2}}"
        replication_configurations:
          - source_location_label: "{{ replication_configuration_linear_1_check_mode.source_location_label }}"
            remote_location_label: "{{ replication_configuration_linear_1_check_mode.remote_location_label }}"
            schedule:
              recovery_point_type: "{{ replication_configuration_linear_1_check_mode.schedule.recovery_point_type }}"
              recovery_point_objective_time_seconds: "{{ replication_configuration_linear_1_check_mode.schedule.recovery_point_objective_time_seconds | int }}"
              retention:
                linear_retention:
                  local: "{{ replication_configuration_linear_1_check_mode.schedule.retention.local }}"
                  remote: "{{ replication_configuration_linear_1_check_mode.schedule.retention.remote }}"
              start_time: "{{ replication_configuration_linear_1_check_mode.schedule.start_time }}"
              sync_replication_auto_suspend_timeout_seconds: >
                {{ replication_configuration_linear_1_check_mode.schedule.sync_replication_auto_suspend_timeout_seconds | int }}
          - source_location_label: "{{  replication_configuration_linear_2_check_mode.source_location_label }}"
            remote_location_label: "{{ replication_configuration_linear_2_check_mode.remote_location_label }}"
            schedule:
              recovery_point_type: "{{ replication_configuration_linear_2_check_mode.schedule.recovery_point_type }}"
              recovery_point_objective_time_seconds: "{{ replication_configuration_linear_2_check_mode.schedule.recovery_point_objective_time_seconds | int }}"
              retention:
                linear_retention:
                  local: "{{ replication_configuration_linear_2_check_mode.schedule.retention.local }}"
                  remote: "{{ replication_configuration_linear_2_check_mode.schedule.retention.remote }}"
              start_time: "{{ replication_configuration_linear_2_check_mode.schedule.start_time }}"
              sync_replication_auto_suspend_timeout_seconds: >
                {{ replication_configuration_linear_2_check_mode.schedule.sync_replication_auto_suspend_timeout_seconds | int }}
        category_ids:
          - "00000000-0000-0000-0000-000000000000"
      register: result
      ignore_errors: true
      check_mode: true

    ########################################################################################

    - name: Create linear retention protection policy
      nutanix.ncp.ntnx_protection_policies_v2:
        name: "ansible-name-linear-{{random_name}}"
        description: "ansible-description-linear-{{random_name}}"
        replication_locations:
          - "{{ replication_location_1 }}"
          - "{{ replication_location_2 }}"
        replication_configurations:
          - source_location_label: "{{ replication_configuration_linear_1.source_location_label }}"
            remote_location_label: "{{ replication_configuration_linear_1.remote_location_label }}"
            schedule:
              recovery_point_type: "{{ replication_configuration_linear_1.schedule.recovery_point_type }}"
              recovery_point_objective_time_seconds: "{{ replication_configuration_linear_1.schedule.recovery_point_objective_time_seconds | int }}"
              retention:
                linear_retention:
                  local: "{{ replication_configuration_linear_1.schedule.retention.local }}"
                  remote: "{{ replication_configuration_linear_1.schedule.retention.remote }}"
              sync_replication_auto_suspend_timeout_seconds: "{{ replication_configuration_linear_1.schedule.sync_replication_auto_suspend_timeout_seconds }}"
          - source_location_label: "{{ replication_configuration_linear_2.source_location_label }}"
            remote_location_label: "{{ replication_configuration_linear_2.remote_location_label }}"
            schedule:
              recovery_point_type: "{{ replication_configuration_linear_2.schedule.recovery_point_type }}"
              recovery_point_objective_time_seconds: "{{ replication_configuration_linear_2.schedule.recovery_point_objective_time_seconds | int }}"
              retention:
                linear_retention:
                  local: "{{ replication_configuration_linear_2.schedule.retention.local }}"
                  remote: "{{ replication_configuration_linear_2.schedule.retention.remote }}"
              sync_replication_auto_suspend_timeout_seconds: "{{ replication_configuration_linear_2.schedule.sync_replication_auto_suspend_timeout_seconds }}"
        category_ids:
          - "{{category_ext_id_1}}"
      register: result
      ignore_errors: true

    - name: Add linear retention protection policy external ID to todelete list
      ansible.builtin.set_fact:
        todelete: "{{ todelete + [result.response.ext_id] }}"

    ########################################################################################

    - name: Create auto retention protection policy
      nutanix.ncp.ntnx_protection_policies_v2:
        name: "ansible-name-auto-{{random_name}}"
        description: "ansible-description-auto-{{random_name}}"
        replication_locations:
          - "{{ replication_location_1 }}"
          - "{{ replication_location_2 }}"
        replication_configurations:
          - source_location_label: "{{ replication_configuration_auto_1.source_location_label }}"
            remote_location_label: "{{ replication_configuration_auto_1.remote_location_label }}"
            schedule:
              recovery_point_type: "{{ replication_configuration_auto_1.schedule.recovery_point_type }}"
              recovery_point_objective_time_seconds: "{{ replication_configuration_auto_1.schedule.recovery_point_objective_time_seconds | int }}"
              retention:
                auto_rollup_retention:
                  local:
                    snapshot_interval_type: "{{ replication_configuration_auto_1.schedule.retention.local.snapshot_interval_type }}"
                    frequency: "{{ replication_configuration_auto_1.schedule.retention.local.frequency }}"
                  remote:
                    snapshot_interval_type: "{{ replication_configuration_auto_1.schedule.retention.remote.snapshot_interval_type }}"
                    frequency: "{{ replication_configuration_auto_1.schedule.retention.remote.frequency }}"
              sync_replication_auto_suspend_timeout_seconds: "{{ replication_configuration_auto_1.schedule.sync_replication_auto_suspend_timeout_seconds }}"
          - source_location_label: "{{ replication_configuration_auto_2.source_location_label }}"
            remote_location_label: "{{ replication_configuration_auto_2.remote_location_label }}"
            schedule:
              recovery_point_type: "{{ replication_configuration_auto_2.schedule.recovery_point_type }}"
              recovery_point_objective_time_seconds: "{{ replication_configuration_auto_2.schedule.recovery_point_objective_time_seconds | int }}"
              retention:
                auto_rollup_retention:
                  local:
                    snapshot_interval_type: "{{ replication_configuration_auto_2.schedule.retention.local.snapshot_interval_type }}"
                    frequency: "{{ replication_configuration_auto_2.schedule.retention.local.frequency }}"
                  remote:
                    snapshot_interval_type: "{{ replication_configuration_auto_2.schedule.retention.remote.snapshot_interval_type }}"
                    frequency: "{{ replication_configuration_auto_2.schedule.retention.remote.frequency }}"
              sync_replication_auto_suspend_timeout_seconds: "{{ replication_configuration_auto_2.schedule.sync_replication_auto_suspend_timeout_seconds }}"
        category_ids:
          - "{{category_ext_id_2}}"
      register: result
      ignore_errors: true

    - name: Add auto retention protection policy external ID to todelete list
      ansible.builtin.set_fact:
        todelete: "{{ todelete + [result.response.ext_id] }}"

    ########################################################################################

    - name: Create Synchronous replication protection policy for using category3
      nutanix.ncp.ntnx_protection_policies_v2:
        name: "ansible-name-sync-vm-{{random_name}}"
        description: "ansible-description-sync-vm-{{random_name}}"
        replication_locations:
          - "{{ replication_location_1 }}"
          - "{{ replication_location_2 }}"
        replication_configurations:
          - source_location_label: "{{ replication_configuration_sync_1.source_location_label }}"
            remote_location_label: "{{ replication_configuration_sync_1.remote_location_label }}"
            schedule:
              recovery_point_type: "CRASH_CONSISTENT"
              recovery_point_objective_time_seconds: "{{ replication_configuration_sync_1.schedule.recovery_point_objective_time_seconds | int }}"
              sync_replication_auto_suspend_timeout_seconds: "{{ replication_configuration_sync_1.schedule.sync_replication_auto_suspend_timeout_seconds }}"
          - source_location_label: "{{ replication_configuration_sync_2.source_location_label }}"
            remote_location_label: "{{ replication_configuration_sync_2.remote_location_label }}"
            schedule:
              recovery_point_type: "CRASH_CONSISTENT"
              recovery_point_objective_time_seconds: "{{ replication_configuration_sync_2.schedule.recovery_point_objective_time_seconds | int }}"
              sync_replication_auto_suspend_timeout_seconds: "{{ replication_configuration_sync_2.schedule.sync_replication_auto_suspend_timeout_seconds }}"
        category_ids:
          - "{{category_ext_id_3}}"
      register: result
      ignore_errors: true

    - name: Add synchronous protection policy external ID to todelete list
      ansible.builtin.set_fact:
        todelete: "{{ todelete + [result.response.ext_id] }}"

    ########################################################################################

    - name: Generate spec for updating linear retention protection policy using check mode
      nutanix.ncp.ntnx_protection_policies_v2:
        ext_id: "{{ todelete[0] }}"
        name: "ansible-update-protection-policy-name"
        description: "ansible-update-protection-policy-description"
        replication_locations:
          - "{{ replication_location_1_updated }}"
          - "{{ replication_location_2_updated }}"
        replication_configurations:
          - source_location_label: "{{ replication_configuration_linear_1_updated_check_mode.source_location_label }}"
            remote_location_label: "{{ replication_configuration_linear_1_updated_check_mode.remote_location_label }}"
            schedule:
              recovery_point_type: "{{ replication_configuration_linear_1_updated_check_mode.schedule.recovery_point_type }}"
              recovery_point_objective_time_seconds: >
                {{ replication_configuration_linear_1_updated_check_mode.schedule.recovery_point_objective_time_seconds | int }}
              retention:
                linear_retention:
                  local: "{{ replication_configuration_linear_1_updated_check_mode.schedule.retention.local }}"
                  remote: "{{ replication_configuration_linear_1_updated_check_mode.schedule.retention.remote }}"
              start_time: "{{ replication_configuration_linear_1_updated_check_mode.schedule.start_time }}"
              sync_replication_auto_suspend_timeout_seconds:
                "{{ replication_configuration_linear_1_updated_check_mode.schedule.
                sync_replication_auto_suspend_timeout_seconds }}"
          - source_location_label: "{{ replication_configuration_linear_2_updated_check_mode.source_location_label }}"
            remote_location_label: "{{ replication_configuration_linear_2_updated_check_mode.remote_location_label }}"
            schedule:
              recovery_point_type: "{{ replication_configuration_linear_2_updated_check_mode.schedule.recovery_point_type }}"
              recovery_point_objective_time_seconds: >
                {{ replication_configuration_linear_2_updated_check_mode.schedule.recovery_point_objective_time_seconds | int }}
              retention:
                linear_retention:
                  local: "{{ replication_configuration_linear_2_updated_check_mode.schedule.retention.local }}"
                  remote: "{{ replication_configuration_linear_2_updated_check_mode.schedule.retention.remote }}"
              start_time: "{{ replication_configuration_linear_2_updated_check_mode.schedule.start_time }}"
              sync_replication_auto_suspend_timeout_seconds:
                "{{ replication_configuration_linear_2_updated_check_mode.schedule.
                sync_replication_auto_suspend_timeout_seconds }}"
        category_ids:
          - "{{category_ext_id_1}}"
      register: result
      ignore_errors: true
      check_mode: true

    ########################################################################################

    - name: Update linear retention protection policy
      nutanix.ncp.ntnx_protection_policies_v2:
        ext_id: "{{ todelete[0] }}"
        name: "ansible-name-linear-{{random_name}}_updated"
        description: "ansible-description-linear-{{random_name}}_updated"
        replication_locations:
          - "{{ replication_location_1_updated }}"
          - "{{ replication_location_2_updated }}"
        replication_configurations:
          - source_location_label: "{{ replication_configuration_linear_1_updated.source_location_label }}"
            remote_location_label: "{{ replication_configuration_linear_1_updated.remote_location_label }}"
            schedule:
              recovery_point_type: "{{ replication_configuration_linear_1_updated.schedule.recovery_point_type }}"
              recovery_point_objective_time_seconds: "{{ replication_configuration_linear_1_updated.schedule.recovery_point_objective_time_seconds | int }}"
              retention:
                linear_retention:
                  local: "{{ replication_configuration_linear_1_updated.schedule.retention.local }}"
                  remote: "{{ replication_configuration_linear_1_updated.schedule.retention.remote }}"
              sync_replication_auto_suspend_timeout_seconds:
                "{{ replication_configuration_linear_1_updated.schedule.
                sync_replication_auto_suspend_timeout_seconds }}"
          - source_location_label: "{{ replication_configuration_linear_2_updated.source_location_label }}"
            remote_location_label: "{{ replication_configuration_linear_2_updated.remote_location_label }}"
            schedule:
              recovery_point_type: "{{ replication_configuration_linear_2_updated.schedule.recovery_point_type }}"
              recovery_point_objective_time_seconds: "{{ replication_configuration_linear_2_updated.schedule.recovery_point_objective_time_seconds | int }}"
              retention:
                linear_retention:
                  local: "{{ replication_configuration_linear_2_updated.schedule.retention.local }}"
                  remote: "{{ replication_configuration_linear_2_updated.schedule.retention.remote }}"
              sync_replication_auto_suspend_timeout_seconds:
                "{{ replication_configuration_linear_2_updated.schedule.
                sync_replication_auto_suspend_timeout_seconds }}"
        category_ids:
          - "{{category_ext_id_1}}"
      register: result
      ignore_errors: true

    ########################################################################################

    - name: Update auto retention protection policy
      nutanix.ncp.ntnx_protection_policies_v2:
        ext_id: "{{ todelete[1] }}"
        name: "ansible-name-auto-{{random_name}}_updated"
        description: "ansible-description-auto-{{random_name}}_updated"
        replication_locations:
          - "{{ replication_location_1_updated }}"
          - "{{ replication_location_2_updated }}"
        replication_configurations:
          - source_location_label: "{{ replication_configuration_auto_1_updated.source_location_label }}"
            remote_location_label: "{{ replication_configuration_auto_1_updated.remote_location_label }}"
            schedule:
              recovery_point_type: "{{ replication_configuration_auto_1_updated.schedule.recovery_point_type }}"
              recovery_point_objective_time_seconds: "{{ replication_configuration_auto_1_updated.schedule.recovery_point_objective_time_seconds | int }}"
              retention:
                auto_rollup_retention:
                  local:
                    snapshot_interval_type: "{{ replication_configuration_auto_1_updated.schedule.retention.local.snapshot_interval_type }}"
                    frequency: "{{ replication_configuration_auto_1_updated.schedule.retention.local.frequency }}"
                  remote:
                    snapshot_interval_type: "{{ replication_configuration_auto_1_updated.schedule.retention.remote.snapshot_interval_type }}"
                    frequency: "{{ replication_configuration_auto_1_updated.schedule.retention.remote.frequency }}"
              sync_replication_auto_suspend_timeout_seconds: >
                "{{ replication_configuration_auto_1_updated.schedule.sync_replication_auto_suspend_timeout_seconds }}"
          - source_location_label: "{{ replication_configuration_auto_2_updated.source_location_label }}"
            remote_location_label: "{{ replication_configuration_auto_2_updated.remote_location_label }}"
            schedule:
              recovery_point_type: "{{ replication_configuration_auto_2_updated.schedule.recovery_point_type }}"
              recovery_point_objective_time_seconds: "{{ replication_configuration_auto_2_updated.schedule.recovery_point_objective_time_seconds | int }}"
              retention:
                auto_rollup_retention:
                  local:
                    snapshot_interval_type: "{{ replication_configuration_auto_2_updated.schedule.retention.local.snapshot_interval_type }}"
                    frequency: "{{ replication_configuration_auto_2_updated.schedule.retention.local.frequency }}"
                  remote:
                    snapshot_interval_type: "{{ replication_configuration_auto_2_updated.schedule.retention.remote.snapshot_interval_type }}"
                    frequency: "{{ replication_configuration_auto_2_updated.schedule.retention.remote.frequency }}"
              sync_replication_auto_suspend_timeout_seconds: >
                "{{ replication_configuration_auto_2_updated.schedule.sync_replication_auto_suspend_timeout_seconds }}"
        category_ids:
          - "{{category_ext_id_2}}"
      register: result
      ignore_errors: true

    ########################################################################################

    - name: List all protection policies
      nutanix.ncp.ntnx_protection_policies_info_v2:
      register: result
      ignore_errors: true

    ########################################################################################

    - name: List all protection policies with filter
      nutanix.ncp.ntnx_protection_policies_info_v2:
        filter: "name eq 'ansible-name-auto-{{random_name}}_updated'"
      register: result
      ignore_errors: true

    ########################################################################################

    - name: List all protection policies with limit
      nutanix.ncp.ntnx_protection_policies_info_v2:
        limit: 1
      register: result
      ignore_errors: true

    ########################################################################################

    - name: Fetch protection policy by external ID
      nutanix.ncp.ntnx_protection_policies_info_v2:
        ext_id: "{{ todelete[0] }}"
      register: result
      ignore_errors: true

    ########################################################################################

    - name: Delete all protection policies
      nutanix.ncp.ntnx_protection_policies_v2:
        ext_id: "{{ item }}"
        state: absent
      loop: "{{ todelete }}"
      register: result
      ignore_errors: true

    ########################################################################################

    - name: Delete Created categories
      nutanix.ncp.ntnx_categories_v2:
        ext_id: "{{item}}"
        state: absent
      register: result
      loop: "{{ todelete_categories }}"
      ignore_errors: true
